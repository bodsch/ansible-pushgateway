---

- name: include OS specific configuration ({{ ansible_distribution }} ({{ ansible_os_family }}) {{ ansible_distribution_major_version }})
  ansible.builtin.include_vars: "{{ lookup('first_found', params) }}"
  vars:
    params:
      paths:
        - "vars"
      files:
        # eg. debian-10 / ubuntu-20.04 / centos-8 / oraclelinux-8
        - "{{ ansible_distribution | lower }}-{{ ansible_distribution_major_version }}.yml"
        # eg. archlinux-systemd / archlinux-openrc
        - "{{ ansible_distribution | lower }}-{{ ansible_service_mgr | lower }}.yml"
        # eg. debian / ubuntu / centos / oraclelinux
        - "{{ ansible_distribution | lower }}.yml"
        # eg. redhat / debian / archlinux
        - "{{ ansible_os_family | lower }}.yml"
        - default.yaml
      skip: true

- name: update package cache
  ansible.builtin.package:
    update_cache: true

- name: define delegate instance for download handling
  ansible.builtin.set_fact:
    pushgateway_delegate_to: "{{ ansible_host }}"
    pushgateway_local_tmp_directory: "{{
        lookup('env', 'CUSTOM_LOCAL_TMP_DIRECTORY') |
        default('/var/cache/ansible/pushgateway', true) }}/{{ pushgateway_version }}"
  when:
    - pushgateway_direct_download

- name: install dependency
  ansible.builtin.package:
    name: "{{ pushgateway_requirements }}"
    state: present

- name: get latest release
  delegate_to: localhost
  become: false
  run_once: true
  when:
    - pushgateway_version == "latest"
  block:
    - name: get latest release
      delegate_to: localhost
      become: false
      run_once: true
      bodsch.scm.github_latest:
        project: prometheus
        repository: pushgateway
        user: "{{ lookup('env', 'GH_USER') | default(omit) }}"
        password: "{{ lookup('env', 'GH_TOKEN') | default(omit) }}"
      register: _latest_release

    - name: re-define pushgateway_version
      ansible.builtin.set_fact:
        pushgateway_version: "{{ _latest_release.latest_release }}"

- name: detect our installation path '{{ pushgateway_install_path | dirname }}'
  ansible.builtin.stat:
    path: "{{ pushgateway_install_path | dirname }}"
    get_checksum: false
  register: stat_pushgateway_path
  ignore_errors: true

- name: old installation
  when:
    - stat_pushgateway_path is defined
    - stat_pushgateway_path.stat is defined
    - stat_pushgateway_path.stat.islnk is defined
    - stat_pushgateway_path.stat.islnk
  block:
    - name: stop old service
      ansible.builtin.service:
        name: pushgateway
        state: stopped
        enabled: false

    - name: remove installed systemd unit
      ansible.builtin.file:
        state: absent
        path: /etc/systemd/system/pushgateway.service

    - name: remove installed pushgateway
      ansible.builtin.file:
        state: absent
        path: "{{ stat_pushgateway_path.stat.path }}"

- name: flush handlers
  ansible.builtin.meta: flush_handlers

- name: detect installed pushgateway binary
  ansible.builtin.stat:
    path: "{{ pushgateway_install_path }}/pushgateway"
  register: stat_pushgateway_binary

- name: create download directory
  become: false
  delegate_to: "{{ pushgateway_delegate_to }}"
  ansible.builtin.file:
    path: "{{ pushgateway_local_tmp_directory }}"
    state: directory
    mode: 0750

- name: user and group handling
  when:
    - pushgateway_system_user != "root" or pushgateway_system_group != "root"
  block:
    - name: create pushgateway group
      ansible.builtin.group:
        name: "{{ pushgateway_system_group }}"
        state: present
        system: true
      when:
        - pushgateway_system_group != "root"

    - name: create pushgateway user
      ansible.builtin.user:
        name: "{{ pushgateway_system_user }}"
        groups: "{{ pushgateway_system_group }}"
        append: true
        shell: /usr/sbin/nologin
        system: true
        createhome: false
        home: /nonexistent
      when:
        - pushgateway_system_user != "root"

- name: create install directory
  ansible.builtin.file:
    path: "{{ pushgateway_install_path }}"
    state: directory
    owner: "{{ pushgateway_system_user }}"
    group: "{{ pushgateway_system_group }}"
    mode: 0755

- name: merge pushgateway configuration between defaults and custom
  ansible.builtin.set_fact:
    pushgateway_release: "{{ pushgateway_defaults_release | combine(pushgateway_release, recursive=True) }}"
    pushgateway_service: "{{ pushgateway_defaults_service | combine(pushgateway_service, recursive=True) }}"

...
