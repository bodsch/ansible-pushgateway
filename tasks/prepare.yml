---

- name: include OS specific configuration ({{ ansible_distribution }} ({{ ansible_os_family }}) {{ ansible_distribution_major_version }})
  include_vars: "{{ lookup('first_found', params) }}"
  vars:
    params:
      paths:
        - "vars"
      files:
        # eg. debian-10 / ubuntu-20.04 / centos-8 / oraclelinux-8
        - "{{ ansible_distribution | lower }}-{{ ansible_distribution_major_version }}.yml"
        # eg. archlinux-systemd / archlinux-openrc
        - "{{ ansible_distribution | lower }}-{{ ansible_service_mgr | lower }}.yml"
        # eg. debian / ubuntu / centos / oraclelinux
        - "{{ ansible_distribution | lower }}.yml"
        # eg. redhat / debian / archlinux
        - "{{ ansible_os_family | lower }}.yml"
        - default.yaml
      skip: true

- name: update package cache
  package:
    update_cache: true

- name: define delegate instance for download handling
  set_fact:
    pushgateway_delegate_to: "{{ ansible_host }}"
    pushgateway_local_tmp_directory: "{{
        lookup('env', 'CUSTOM_LOCAL_TMP_DIRECTORY') |
        default('/var/cache/ansible/pushgateway', true) }}/{{ pushgateway_version }}"
  when:
    - pushgateway_direct_download

- name: install dependency
  package:
    name: "{{ pushgateway_requirements }}"
    state: present

- name: detect our installation path '{{ pushgateway_install_path | dirname }}'
  stat:
    path: "{{ pushgateway_install_path | dirname }}"
    get_checksum: false
  register: stat_pushgateway_path
  ignore_errors: true

- name: old installation
  block:
    - name: stop old service
      service:
        name: pushgateway
        state: stopped
        enabled: false

    - name: remove installed pushgateway
      file:
        state: absent
        path: "{{ stat_pushgateway_path.stat.path }}"
  when:
    - stat_pushgateway_path is defined
    - stat_pushgateway_path.stat is defined
    - stat_pushgateway_path.stat.islnk is defined
    - stat_pushgateway_path.stat.islnk

- name: detect installed pushgateway binary
  stat:
    path: "{{ pushgateway_install_path }}/pushgateway"
  register: stat_pushgateway_binary

- name: create download directory
  become: false
  delegate_to: "{{ pushgateway_delegate_to }}"
  file:
    path: "{{ pushgateway_local_tmp_directory }}"
    state: directory
    mode: 0750

- name: user and group handling
  block:
    - name: create pushgateway group
      group:
        name: "{{ pushgateway_system_group }}"
        state: present
        system: true

    - name: create pushgateway user
      user:
        name: "{{ pushgateway_system_user }}"
        groups: "{{ pushgateway_system_group }}"
        append: true
        shell: /usr/sbin/nologin
        system: true
        createhome: false
        home: /nonexistent
  when:
    - pushgateway_system_user != "root"

- name: create install directory
  file:
    path: "{{ pushgateway_install_path }}"
    state: directory
    owner: "{{ pushgateway_system_user }}"
    group: "{{ pushgateway_system_group }}"
    mode: 0755

- name: fix directory rights for {{ pushgateway_install_path | dirname }}
  file:
    path: "{{ pushgateway_install_path | dirname }}"
    state: directory
    owner: "{{ pushgateway_system_user }}"
    group: "{{ pushgateway_system_group }}"
    mode: 0755
    recurse: true

- name: merge pushgateway download configuration between defaults and custom
  set_fact:
    pushgateway_release: "{{ pushgateway_defaults_release |
      combine( pushgateway_release, recursive=True ) }}"

- name: merge pushgateway web configuration between defaults and custom
  set_fact:
    pushgateway_web: "{{ pushgateway_defaults_web |
      combine( pushgateway_web, recursive=True ) }}"

- name: merge pushgateway persistence configuration between defaults and custom
  set_fact:
    pushgateway_persistence: "{{ pushgateway_defaults_persistence |
      combine( pushgateway_persistence, recursive=True ) }}"

- name: merge pushgateway logging configuration between defaults and custom
  set_fact:
    pushgateway_logging: "{{ pushgateway_defaults_logging |
      combine( pushgateway_logging, recursive=True ) }}"

...
